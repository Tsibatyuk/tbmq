{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "thingsboard-mqtt-broker": {
      "root": "",
      "sourceRoot": "src",
      "projectType": "application",
      "prefix": "tb",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        }
      },
      "architect": {
        "build": {
          "builder": "@angular-builders/custom-webpack:browser",
          "options": {
            "outputPath": "target/generated-resources/public",
            "index": "src/index.html",
            "main": "src/main.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "src/tsconfig.app.json",
            "aot": true,
            "assets": [
              "src/thingsboard-mqtt-broker.ico",
              "src/assets",
              {
                "glob": "worker-html.js",
                "input": "./node_modules/ace-builds/src-noconflict/",
                "output": "/"
              },
              {
                "glob": "worker-css.js",
                "input": "./node_modules/ace-builds/src-noconflict/",
                "output": "/"
              },
              {
                "glob": "worker-json.js",
                "input": "./node_modules/ace-builds/src-noconflict/",
                "output": "/"
              },
              {
                "glob": "worker-javascript.js",
                "input": "./node_modules/ace-builds/src-noconflict/",
                "output": "/"
              },
              {
                "glob": "**/*",
                "input": "node_modules/material-design-icons/iconfont/",
                "output": "assets/fonts"
              }
            ],
            "styles": [
              "src/styles.scss",
              "node_modules/jquery.terminal/css/jquery.terminal.min.css",
              "node_modules/prismjs/themes/prism.css",
              "node_modules/tooltipster/dist/css/tooltipster.bundle.min.css",
              "node_modules/tooltipster/dist/css/plugins/tooltipster/sideTip/themes/tooltipster-sideTip-shadow.min.css"
            ],
            "stylePreprocessorOptions": {
              "includePaths": [
                "src/scss"
              ]
            },
            "scripts": [
              "node_modules/systemjs/dist/system.js",
              "node_modules/marked/lib/marked.js",
              "node_modules/prismjs/prism.js",
              "node_modules/prismjs/components/prism-bash.min.js",
              "node_modules/prismjs/components/prism-json.min.js"
            ],
            "customWebpackConfig": {
              "path": "./extra-webpack.config.js"
            },
            "allowedCommonJsDependencies": [
              "hammerjs",
              "react",
              "react-ace",
              "@material-ui/icons/Add",
              "@material-ui/icons/Clear",
              "prop-types",
              "react-is",
              "hoist-non-react-statics",
              "classnames",
              "raf",
              "moment-timezone",
              "lodash",
              "jquery",
              "jquery.terminal",
              "moment",
              "chart.js",
              "js-beautify",
              "tooltipster"
            ]
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "9mb",
                  "maximumError": "12mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-builders/custom-webpack:dev-server",
          "options": {
            "browserTarget": "thingsboard-mqtt-broker:build",
            "proxyConfig": "proxy.conf.js"
          },
          "configurations": {
            "production": {
              "browserTarget": "thingsboard-mqtt-broker:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "thingsboard-mqtt-broker:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "src/tsconfig.spec.json",
            "karmaConfig": "src/karma.conf.js",
            "styles": [
              "src/styles.scss"
            ],
            "scripts": [],
            "assets": [
              "src/favicon.ico",
              "src/assets"
            ]
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "src/tsconfig.app.json",
              "src/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**"
            ]
          }
        }
      }
    },
    "thingsboard-mqtt-broker-e2e": {
      "root": "e2e/",
      "projectType": "application",
      "prefix": "",
      "architect": {
        "e2e": {
          "builder": "@angular-devkit/build-angular:protractor",
          "options": {
            "protractorConfig": "e2e/protractor.conf.js",
            "devServerTarget": "thingsboard-mqtt-broker:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "thingsboard-mqtt-broker:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": "e2e/tsconfig.e2e.json",
            "exclude": [
              "**/node_modules/**"
            ]
          }
        }
      }
    }
  },
  "defaultProject": "thingsboard-mqtt-broker",
  "cli": {
    "packageManager": "yarn",
    "analytics": false
  }
}
