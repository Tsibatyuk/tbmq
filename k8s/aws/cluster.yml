#
# Copyright Â© 2016-2023 The Thingsboard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

availabilityZones: [ eu-west-1a,eu-west-1b,eu-west-1c ]

metadata:
  name: thingsboard-mqtt-broker-cluster
  region: eu-west-1
  version: "1.23"

managedNodeGroups:
  - name: tb-mqtt-broker
    instanceType: c6g.metal
    desiredCapacity: 1
    maxSize: 1
    minSize: 0
    labels: { role: tb-mqtt-broker }
    ssh:
      publicKeyPath: ~/.ssh/id_rsa_tests.pub
    ami: ami-0de6044cc8d220517
    amiFamily: AmazonLinux2
    overrideBootstrapCommand: |
      #!/bin/bash
      /etc/eks/bootstrap.sh thingsboard-mqtt-broker-cluster \
        --container-runtime dockerd \
        --use-max-pods true \
        --docker-config-json '{
        "bridge":"none",
        "log-driver":"json-file",
        "log-opts":{
          "max-size":"10m",
          "max-file":"10"
        },
        "live-restore":true,
        "max-concurrent-downloads":10,
        "default-ulimits":{
          "memlock":{
            "Hard":-1,
            "Name":"memlock",
            "Soft":-1
          },
          "nofile":{
            "Hard":4194304,
            "Name":"nofile",
            "Soft":4194304
          }
        }
      }' \
        --kubelet-extra-args "--node-labels=alpha.eksctl.io/cluster-name=thingsboard-mqtt-broker-cluster,alpha.eksctl.io/nodegroup-name=tb-mqtt-broker,alpha.eksctl.io/nodegroup-type=managed"
    preBootstrapCommands:
      - "sysctl -w fs.nr_open=4194304"
  - name: tb-perf-test
    instanceType: c6g.metal
    desiredCapacity: 4
    maxSize: 4
    minSize: 0
    labels: { role: tb-perf-test }
    ssh:
      publicKeyPath: ~/.ssh/id_rsa_tests.pub
  - name: tb-kafka-ui
    instanceType: m5.large
    desiredCapacity: 1
    maxSize: 1
    minSize: 0
    labels: { role: tb-kafka-ui }
    ssh:
      publicKeyPath: ~/.ssh/id_rsa_tests.pub
#  - name: tb-test
#    instanceType: c6g.large
#    desiredCapacity: 1
#    maxSize: 1
#    minSize: 0
#    labels: { role: tb-test }
#    ssh:
#      publicKeyPath: ~/.ssh/id_rsa_tests.pub

# In order to scale the node groups from 1 (desiredCapacity: 1) to X execute the following commands:
# eksctl scale nodegroup --cluster=thingsboard-mqtt-broker-cluster --nodes=X tb-mqtt-broker
# eksctl scale nodegroup --cluster=thingsboard-mqtt-broker-cluster --nodes=X tb-perf-test